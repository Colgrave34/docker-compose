version: '3'

services:
  conduit:
    image: matrixconduit/matrix-conduit:latest
    container_name: matrix_conduit
    restart: unless-stopped
    ports:
      - 8167:6167
    volumes:
      - matrix_rocksdb:/var/lib/matrix-conduit/
    environment:
      CONDUIT_SERVER_NAME: your.server.name # EDIT THIS
      CONDUIT_DATABASE_PATH: /var/lib/matrix-conduit/
      CONDUIT_DATABASE_BACKEND: rocksdb
      CONDUIT_PORT: 6167
      CONDUIT_MAX_REQUEST_SIZE: 20000000 # in bytes, ~20 MB
      CONDUIT_ALLOW_REGISTRATION: 'true'
      CONDUIT_ALLOW_FEDERATION: 'true'
      CONDUIT_ALLOW_CHECK_FOR_UPDATES: 'true'
      CONDUIT_TRUSTED_SERVERS: '["matrix.org","archlinux.org","aria-net.org","fedoraproject.org","gnome.org","kde.org","mozilla.org","opensuse.org","tchncs.de","tedomum.net","utwente.io"]'
      CONDUIT_MAX_CONCURRENT_REQUESTS: 100
      CONDUIT_ADDRESS: 0.0.0.0
      CONDUIT_CONFIG: '' # Ignore this
    depends_on:
      db:
        condition: service_healthy

  cinny:
    image: ajbura/cinny:latest
    container_name: matrix_cinny
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - /matrix/cinny/config.json:/app/config.json # EDIT THIS
    depends_on:
      conduit:
        condition: service_started

  db:
    image: postgres:16-alpine
    container_name: matrix_db
    restart: unless-stopped
    volumes:
      # This will create a docker volume to persist the database files in.
      # If you prefer those files to be outside of docker, you'll need to change this.
      - matrix_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=matrix
      - POSTGRES_USER=matrix
      - POSTGRES_DB=matrix
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]

volumes:
  matrix_rocksdb:
    name: matrix_rocksdb
  matrix_db:
    name: matrix_db

networks:
  matrix:
    name: matrix
